-- MySQL Script generated by MySQL Workbench
-- 09/22/14 17:21:41
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema movies_v3
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `surname` VARCHAR(30) NOT NULL,
  `username` VARCHAR(30) NOT NULL,
  `email` VARCHAR(60) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `rights` SMALLINT NOT NULL DEFAULT 000000000,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `USERNAME_UNIQUE` (`username` ASC),
  UNIQUE INDEX `ID_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_de` VARCHAR(30) NOT NULL,
  `name_en` VARCHAR(30) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Medium`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Medium` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title_de` VARCHAR(150) NOT NULL,
  `title_en` VARCHAR(150) NULL,
  `type_id` INT NULL,
  `owner_id` INT NOT NULL,
  `duration` INT NULL,
  `fsk` INT NULL,
  `premiere` DATE NULL,
  `num_disks` INT NULL,
  `content_de` TEXT NULL,
  `content_en` TEXT NULL,
  `dvd_or_bluray` TINYINT NULL,
  `cover_file` VARCHAR(150) NULL,
  `cover_source` VARCHAR(200) NULL,
  `imdb_url` VARCHAR(100) NULL,
  `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `ID_UNIQUE` (`id` ASC),
  INDEX `fk_MEDIUM_USER1_idx` (`owner_id` ASC),
  INDEX `fk_MEDIUM_TYPE1_idx` (`type_id` ASC),
  CONSTRAINT `fk_MEDIUM_USER1`
    FOREIGN KEY (`owner_id`)
    REFERENCES `User` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEDIUM_TYPE1`
    FOREIGN KEY (`type_id`)
    REFERENCES `Type` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Director` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Medium_has_Director`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Medium_has_Director` (
  `medium_id` INT NOT NULL,
  `director_id` INT NOT NULL,
  PRIMARY KEY (`medium_id`, `director_id`),
  INDEX `fk_MEDIUM_has_DIRECTOR_DIRECTOR1_idx` (`director_id` ASC),
  INDEX `fk_MEDIUM_has_DIRECTOR_MEDIUM_idx` (`medium_id` ASC),
  CONSTRAINT `fk_MEDIUM_has_DIRECTOR_MEDIUM`
    FOREIGN KEY (`medium_id`)
    REFERENCES `Medium` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEDIUM_has_DIRECTOR_DIRECTOR1`
    FOREIGN KEY (`director_id`)
    REFERENCES `Director` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Actor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  `year_of_birth` SMALLINT NULL DEFAULT 0,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Genre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name_de` VARCHAR(30) NOT NULL,
  `name_en` VARCHAR(30) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Publisher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Publisher` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Blacklist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Blacklist` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `time` TIMESTAMP NOT NULL,
  `ip` VARCHAR(15) NOT NULL,
  `try` VARCHAR(30) NOT NULL,
  `attempts` SMALLINT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Medium_has_Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Medium_has_Genre` (
  `medium_id` INT NOT NULL,
  `genre_id` INT NOT NULL,
  PRIMARY KEY (`medium_id`, `genre_id`),
  INDEX `fk_MEDIUM_has_GENRE_GENRE1_idx` (`genre_id` ASC),
  INDEX `fk_MEDIUM_has_GENRE_MEDIUM1_idx` (`medium_id` ASC),
  CONSTRAINT `fk_MEDIUM_has_GENRE_MEDIUM1`
    FOREIGN KEY (`medium_id`)
    REFERENCES `Medium` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEDIUM_has_GENRE_GENRE1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `Genre` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Medium_has_Publisher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Medium_has_Publisher` (
  `medium_id` INT NOT NULL,
  `publisher_id` INT NOT NULL,
  PRIMARY KEY (`medium_id`, `publisher_id`),
  INDEX `fk_MEDIUM_has_PUBLISHER_PUBLISHER1_idx` (`publisher_id` ASC),
  INDEX `fk_MEDIUM_has_PUBLISHER_MEDIUM1_idx` (`medium_id` ASC),
  CONSTRAINT `fk_MEDIUM_has_PUBLISHER_MEDIUM1`
    FOREIGN KEY (`medium_id`)
    REFERENCES `Medium` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEDIUM_has_PUBLISHER_PUBLISHER1`
    FOREIGN KEY (`publisher_id`)
    REFERENCES `Publisher` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Medium_has_Actor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Medium_has_Actor` (
  `medium_id` INT NOT NULL,
  `actor_id` INT NOT NULL,
  `role` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`medium_id`, `actor_id`),
  INDEX `fk_MEDIUM_has_ACTOR_ACTOR1_idx` (`actor_id` ASC),
  INDEX `fk_MEDIUM_has_ACTOR_MEDIUM1_idx` (`medium_id` ASC),
  CONSTRAINT `fk_MEDIUM_has_ACTOR_MEDIUM1`
    FOREIGN KEY (`medium_id`)
    REFERENCES `Medium` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEDIUM_has_ACTOR_ACTOR1`
    FOREIGN KEY (`actor_id`)
    REFERENCES `Actor` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Config`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Config` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NOT NULL,
  `data` VARCHAR(50) NOT NULL,
  `type` VARCHAR(20) NOT NULL,
  `description_de` TEXT NOT NULL,
  `description_en` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

--
-- Data for table `User`
--

INSERT INTO `User` (`id`, `name`, `surname`, `username`, `email`, `password`, `rights`) VALUES
(1, '', '', 'admin', '', '$2y$10$jqVBnP0zea.skFYBC6uHTON6D3V7NWZX95Bk..VOY4yLuekrst2z.', 511);

--
-- Data for table `Config`
--

INSERT INTO `Config` (`id`, `name`, `data`, `type`, `description_en`, `description_de`) VALUES
(1, 'public', 'true', 'boolean', 'true: everyone can use this webpage<br>\nfalse: only registered users can use it', 'true: jeder kann diese Webseite verwenden<br>\nfalse: nur registrierte Benutzer können sie verwenden'),
(2, 'title', 'Movies v3', 'string', 'page title', 'Seitentitel'),
(3, 'superadmin_id', '1', 'int', 'user id of the admin who shouldn''t be edited.', 'Benutzerid des Admins der nicht bearbeitet werden darf.'),
(4, 'country', 'Germany', 'string', 'used by IMDb import to get the proper age rating and release date.', 'wird vom IMDb Import verwendet um die richtige Altersfreigabe und das Veröffentlichungsdatum zu bekommen.'),
(5, 'imdb_auto_add', 'false', 'boolean', 'true: if possible the missing data values will be added automatically<br>\nfalse: the missing values will be shown after the import and can be added  manually', 'true: wenn möglich werden die fehlenden Daten automatisch hinzugefügt<br>\nfalse: fehlende Daten werden nach dem Import angezeigt und können dann von Hand hinzugefügt werden');
